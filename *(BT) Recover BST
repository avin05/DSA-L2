import java.util.Scanner;

public class Main {
    public static Scanner scn = new Scanner(System.in);

    public static class TreeNode {
        int val = 0;
        TreeNode left = null;
        TreeNode right = null;

        TreeNode(int val) {
            this.val = val;
        }
    }
    
    public static void recover(TreeNode root, TreeNode[] pointers){
        if(root == null){
            return;
        }
        
        recover(root.left,pointers);
        if(pointers[0] == null){
            pointers[0] = root;
        }else{
            pointers[1] = root;
            if(pointers[0].val > pointers[1].val){
                if(pointers[3]==null){
                    pointers[2] = pointers[0];
                    pointers[3] = pointers[1];
                }else{
                    pointers[3] = root;
                }
            }
            pointers[0] = root;
        }
        recover(root.right,pointers);
    } 

    public static void recoverTree(TreeNode root) {
        TreeNode[] pointers = new TreeNode[4];
        recover(root,pointers);
        int temp = pointers[2].val;
        pointers[2].val = pointers[3].val;
        pointers[3].val = temp;

    }

    // input_section=================================================

    public static void display(TreeNode node) {
        if (node == null)
            return;

        StringBuilder sb = new StringBuilder();
        sb.append((node.left != null ? node.left.val : "."));
        sb.append(" -> " + node.val + " <- ");
        sb.append((node.right != null ? node.right.val : "."));

        System.out.println(sb.toString());

        display(node.left);
        display(node.right);

    }

    public static TreeNode createTree(int[] arr, int[] IDX) {
        if (IDX[0] > arr.length || arr[IDX[0]] == -1) {
            IDX[0]++;
            return null;
        }

        TreeNode node = new TreeNode(arr[IDX[0]++]);
        node.left = createTree(arr, IDX);
        node.right = createTree(arr, IDX);

        return node;
    }

    public static void solve() {
        int n = scn.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++)
            arr[i] = scn.nextInt();

        int[] IDX = new int[1];
        TreeNode root = createTree(arr, IDX);
        recoverTree(root);
        display(root);
    }

    public static void main(String[] args) {
        solve();
    }
}
