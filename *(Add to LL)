import java.util.*;

class Main {
    public static Scanner scn = new Scanner(System.in);

    public static class ListNode {
        int val = 0;
        ListNode next = null;

        ListNode(int val) {
            this.val = val;
        }
    }
    public static ListNode reverse(ListNode head){
        ListNode prev = null,next = null;
        ListNode curr = head;
        
        while(curr!=null){
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        
        return prev;
    }
    public static ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if(l1 == null || l2 == null){
            return l1 == null?l2:l1;
        }
        ListNode ans = new ListNode(-1);
        ListNode temp = ans;
        ListNode rev1 = reverse(l1);
        ListNode rev2 = reverse(l2);
        int carry =0;
        ListNode temp1 =rev1,temp2 = rev2;
        while(carry!=0 || temp1!=null || temp2!=null){
            int val1 = temp1 == null?0:temp1.val;
            int val2 = temp2 == null?0:temp2.val;
            temp1 = temp1 == null?null:temp1.next;
            temp2 = temp2 == null?null:temp2.next;
            int sum = (carry+val1 + val2);
            carry = sum/10;
            ListNode nn = new ListNode(sum%10);
            temp.next = nn;
            temp = nn;
            
            
        }
        
        ans = ans.next;
        
        ListNode res = reverse(ans);
        return res;
    }

    // InFput_code===================================================

    public static void printList(ListNode node) {
        while (node != null) {
            System.out.print(node.val + " ");
            node = node.next;
        }
    }

    public static ListNode makeList(int n) {
        ListNode dummy = new ListNode(-1);
        ListNode prev = dummy;
        while (n-- > 0) {
            prev.next = new ListNode(scn.nextInt());
            prev = prev.next;
        }

        return dummy.next;
    }

    public static void main(String[] args) {
        ListNode head1 = makeList(scn.nextInt());
        ListNode head2 = makeList(scn.nextInt());

        ListNode ans = addTwoNumbers(head1, head2);
        printList(ans);
    }

}
